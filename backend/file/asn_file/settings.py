"""
Django settings for asn_file project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

from common_structure_microservices.profiles import Profiles

configuration = Profiles()
operating_system = configuration.get_operating_system()
configuration.get_specific_env()
general_config = configuration.get_general_env()
params = configuration.CONFIG

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't-b&c0&9639#13t8y77lv^mmy2j+ba#1$95zum^iz8i+y8b^nr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = params.get('DEBUG', True)

ALLOWED_HOSTS = ['*']

CORS_ORIGIN_ALLOW_ALL = True

BASE_URL = general_config.get('BASE_URL', '/api/')
CONTEXT_PATH = general_config.get('BASE_PATH', 'files/')
API_GATEWAY = general_config.get('API_GATEWAY', 'asn_gateway/')

APP_NAME = general_config.get('APP_NAME', 'asn_file')
APPLICATION_PORT = general_config.get('APPLICATION_PORT', 8096)

EUREKA_SERVER = general_config.get('eureka_server', 'http://localhost:8090/eureka/')
SWAGGER_URL = params.get('SWAGGER_URL', None)

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'DRF Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False
}

# Application definition
INSTALLED_APPS = [
    'djongo',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'file',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'asn_file.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'asn_file.wsgi.application'

REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'common_structure_microservices.exception_handler.custom_exception_handler',
}

if params.get('DEFAULT_PERMISSION_CLASSES', '') != '':
    REST_FRAMEWORK.update(
        {'DEFAULT_PERMISSION_CLASSES': [params.get('DEFAULT_PERMISSION_CLASSES'), ]}
    )

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        "CLIENT": {
            'name': 'asn_file',
            'host': params.get('HOST_DATABASE', 'mongodb+srv://user:04052018@tesisasn.0rbje.mongodb.net/'
                                                'asn_file?retryWrites=true&w=majority'),
            'username': params.get('USER', 'user'),
            'password': params.get('PASSWORD', '04052018'),
            'authMechanism': 'SCRAM-SHA-1',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = params.get('STATIC_URL', '/static/')
